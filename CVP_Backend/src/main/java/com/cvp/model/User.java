package com.cvp.model;

import java.util.List;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;


import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Component
@Scope("prototype")
@DynamoDBTable(tableName = "User")
public class User {

    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    private String id;
    
    @DynamoDBAttribute(attributeName = "firstName")
    @NotNull(message = "Provide value for First name")
    private String firstName;
    
    @DynamoDBAttribute(attributeName = "lastName")
    @NotNull(message = "Provide value for last name")
    private String lastName;
    
    @DynamoDBAttribute(attributeName = "userName")
    private String userName;
    
    @DynamoDBAttribute(attributeName = "password")
    @NotEmpty(message = "Provide value for password")
    @Size(min = 8, message = "Your Password must be at least 8 character long")
    @Pattern(regexp = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\",./<>?]).{8,}$", message = "Password must contain at least one letter, one number, and one special character")
    private String password;
    
    @DynamoDBAttribute(attributeName = "email")
    @NotEmpty(message = "Provide value for email")
    @Pattern(regexp = "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$", message = "Invalid email format")
    private String email;
    
    @DynamoDBAttribute(attributeName = "phoneNumber")
    @NotEmpty(message = "Provide value for phoneNumber")
    @Pattern(regexp = "^[0-9]{10}$", message = "Mobile Number must be 10 digits")
    private String phoneNumber;
    
    @DynamoDBAttribute(attributeName = "alternativeEmail")
    @NotEmpty(message = "Provide value for email")
    @Pattern(regexp = "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$", message = "Invalid email format")
    private String alternativeEmail;
    
    @DynamoDBAttribute(attributeName = "gender")
    @NotEmpty(message = "Provide value for gender")
    private String gender;
    
    @DynamoDBAttribute(attributeName = "resetToken")
    private String resetToken;

    @DynamoDBAttribute(attributeName = "taskSignups")
    private List<String> taskSignups;

}
