package com.cvp.model;

import java.util.List;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import jakarta.validation.constraints.Size;
import lombok.*;


@Data
@NoArgsConstructor
@AllArgsConstructor
@Component
@Scope("prototype")
@DynamoDBTable(tableName = "Organization")
public class Organization {

    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute(attributeName = "name")
    @NotNull(message = "Name can't be null")
    private String name;

    @DynamoDBAttribute(attributeName = "website")
    @NotNull(message = "Provide value for website")
    @Pattern(regexp = "^(http(s)?://)?(www\\.)?[a-zA-Z0-9-]+(\\.[a-zA-Z]{2,})+(/.*)?$", message = "Invalid website URL format")
    private String website;

    @DynamoDBAttribute(attributeName = "location")
    @NotNull(message = "Provide value for location")
    private String location;

    @DynamoDBAttribute(attributeName = "email")
    @NotNull(message = "Provide value for email")
    @Pattern(regexp = "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$", message = "Invalid email format")
    private String email;

    @DynamoDBAttribute(attributeName = "phoneNumber")
    @NotNull(message = "Provide value for phoneNumber")
    @Pattern(regexp = "^[0-9]{10}$", message = "Mobile Number must be 10 digits")
    private String phoneNumber;

    @DynamoDBAttribute(attributeName = "taskIds")
    private List<String> taskIds; 

    @DynamoDBAttribute(attributeName = "password")
    @NotNull(message = "Provide value for password")
    @Size(min = 8, message = "Your password must be at least 8 characters long")
    @Pattern(regexp = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&]).{8,}$", message = "Password must contain at least one letter, one number, and one special character")
    private String password;

}
