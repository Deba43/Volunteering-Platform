package com.cvp.model;

import jakarta.validation.constraints.FutureOrPresent;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDate;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.cvp.config.LocalDateConverter;


@Data
@NoArgsConstructor
@AllArgsConstructor
@Component
@Scope("prototype")
@DynamoDBTable(tableName = "TaskSignup")
public class TaskSignup {

    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute(attributeName = "volunteerName")
    @NotNull(message = "Provide a value for volunteer name")
    @Size(max = 50, message = "Volunteer name must be at most 50 characters")
    private String volunteerName;

    @DynamoDBAttribute(attributeName = "taskName")
    @NotNull(message = "Provide a value for task name")
    @Size(max = 100, message = "Task name must be at most 100 characters")
    private String taskName;

    @DynamoDBAttribute(attributeName = "signupDate")
    @FutureOrPresent(message = "Signup date should be either current or future date")
    @DynamoDBTypeConverted(converter = LocalDateConverter.class)
    private LocalDate signupDate = LocalDate.now();

    @DynamoDBAttribute(attributeName = "userId")
    private String userId;

    @DynamoDBAttribute(attributeName = "taskId")
    private String taskId;

}
